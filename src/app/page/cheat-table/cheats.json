[
  {
    "Question": "Можно ли в программировании обойтись без структур данных?",
    "Answer": "2",
    "Info": "можно, но только в очень простых случаях"
  },
  {
    "Question": "Какие характерные признаки у структур данных?",
    "Answer": "4",
    "Info": "мн-во допустимых значений, хар-р отношения между данными, возможные операции над структурами данных"
  },
  {
    "Question": "В чем преимущество при использовании структур данных?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Где наиболее часто используются структуры?",
    "Answer": "5",
    "Info": "все ответы верны"
  },
  {
    "Question": "Из каких элементов может состоять структура данных?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Является ли множество данных структурой?",
    "Answer": "2",
    "Info": "не является"
  },
  {
    "Question": "Какие отношения между данными могут быть в структуре данных?",
    "Answer": "2",
    "Info": "отношение вида один ко многим"
  },
  {
    "Question": "Чем отличается тип данных от структуры данных?",
    "Answer": "1",
    "Info": "наличием отношений между данными"
  },
  {
    "Question": "Какие операции из перечисленных возможны над структурами данных?",
    "Answer": "3",
    "Info": "сравнение"
  },
  {
    "Question": "Какие операции возможны над структурами данных?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Какая структура называется сложной?",
    "Answer": "2",
    "Info": "структура содержит в качестве элемента подструктуру"
  },
  {
    "Question": "Какая структура данных называется простой?",
    "Answer": "1",
    "Info": "структура, состоящая из элементов разного типа"
  },
  {
    "Question": "Что понимается под логическим представлением структуры данных?",
    "Answer": "2",
    "Info": "с помощью декларативных операторов алгоритмического языка"
  },
  {
    "Question": "Что понимается под физическим представлением структуры данных?",
    "Answer": "3",
    "Info": "представление структуры в машинном коде"
  },
  {
    "Question": "С каким представлением структуры данных работает программист при разработке приложений",
    "Answer": "1",
    "Info": "логическим"
  },
  {
    "Question": "как осуществляется переход от логического представления структуры данных к физическому и обратно?",
    "Answer": "1",
    "Info": "с помощью транслятора"
  },
  {
    "Question": "какая связь между структурами данных и алгоритмом?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Детерминированный Алгоритм - это…",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Чем отличается алгоритм от рецепта?",
    "Answer": "2",
    "Info": "определенностью"
  },
  {
    "Question": "Является ли алгоритмом процесс вычисления числа Пи?",
    "Answer": "2",
    "Info": "не является"
  },
  {
    "Question": "Какие главные характеристики используются для оценки эффективности алгоритма?",
    "Answer": "1",
    "Info": "время работы алгоритма"
  },
  {
    "Question": "Основные задачи теории алгоритмов?",
    "Answer": "1",
    "Info": "существование или не существование эффективных алгоритмов"
  },
  {
    "Question": "Какая бывает сложность алгоритмов?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Что такое асимптотическая временная сложность алгоритма?",
    "Answer": "1",
    "Info": "Поведение временной сложности в пределе при увеличении размера задачи"
  },
  {
    "Question": "Что такое емкостная сложность алгоритма?",
    "Answer": "3",
    "Info": "все ответы верны"
  },
  {
    "Question": "Что такое асимптотическая емкостная сложность алгоритма?",
    "Answer": "1",
    "Info": "поведение емкостной сложности в пределе при увеличении размера задачи"
  },
  {
    "Question": "Как определяется порядок сложности алгоритма?",
    "Answer": "2",
    "Info": "порядок сложности алгоритма равен сумме порядков сложности каждой части алгоритма"
  },
  {
    "Question": "Что означает О(Log n) для алгоритма?",
    "Answer": "1",
    "Info": "логарифмическая сложность"
  },
  {
    "Question": "Что означает О(n^а) для алгоритма?",
    "Answer": "3",
    "Info": "полиноминальный порядок сложности"
  },
  {
    "Question": "Что означает О(n^m) для алгоритма?",
    "Answer": "4",
    "Info": "экспоненциальный порядок сложности"
  },
  {
    "Question": "Что означает n в алгоритмах сложности O(Log n)?",
    "Answer": "1",
    "Info": "размерность входных данных"
  },
  {
    "Question": "Какой класс алгоритмов предпочтительней?",
    "Answer": "1",
    "Info": "детерминированные"
  },
  {
    "Question": "Что такое абстрактный тип данных?",
    "Answer": "2",
    "Info": "множество абстрактных объектов и набор операций, которые могут быть выполнены над этими объектами"
  },
  {
    "Question": "Какая структура предпочтительней для хранения данных о работниках предприятия?",
    "Answer": "4",
    "Info": "таблица"
  },
  {
    "Question": "Какая структура предпочтительней для организации меню интерфейса?",
    "Answer": "4",
    "Info": "список списков"
  },
  {
    "Question": "Что нельзя считать типом данных?",
    "Answer": "4",
    "Info": "идентификаторы"
  },
  {
    "Question": "К какому типу данных относится тип WORD?",
    "Answer": "1",
    "Info": "к целочисленному типу"
  },
  {
    "Question": "Какой тип данных требует меньше времени на выполнение одинаковых операций над ними?",
    "Answer": "4",
    "Info": "логический"
  },
  {
    "Question": "Какой тип данных требует меньше времени на выполнение операций над ними?",
    "Answer": "1",
    "Info": "целочисленный"
  },
  {
    "Question": "Какое самое большое число может обрабатываться, если мы имеем дело с целочисленным типом WORD?",
    "Answer": "3",
    "Info": "65535"
  },
  {
    "Question": "Какое самое большое число может обрабатываться если мы имеем дело с целочисленным типом shortint?",
    "Answer": "2",
    "Info": "255"
  },
  {
    "Question": "Сколько памяти занимает переменная символьного типа?",
    "Answer": "2",
    "Info": "1 байт"
  },
  {
    "Question": "Что понимается под физическим представлением структуры данных?",
    "Answer": "3",
    "Info": "представление структуры в машинном коде"
  },
  {
    "Question": "Зачем надо знать сложность алгоритма?",
    "Answer": "3",
    "Info": "все ответы верны"
  },
  {
    "Question": "По каким признакам могут классифицироваться структуры данных?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Что включает в себя понятие тип данных?",
    "Answer": "4",
    "Info": "все перечисленное"
  },
  {
    "Question": "Если возможно применение либо целочисленного, либо вещественного типа, какому из них будет отдано предпочтение?",
    "Answer": "1",
    "Info": "целочисленному"
  },
  {
    "Question": "Можно ли преобразовать целочисленный тип shortint в целочисленный тип integer?",
    "Answer": "4",
    "Info": "можно, но увеличивается объем необходимой памяти"
  },
  {
    "Question": "Можно ли преобразовать целочисленный тип integer в целочисленный тип shortint?",
    "Answer": "1",
    "Info": "можно, если каждое данное занимает не более 8 бит"
  },
  {
    "Question": "Почему используемые данные мы должны отнести к определенному типу данных?",
    "Answer": "4",
    "Info": "важно все вышеперечисленное"
  },
  {
    "Question": "Одинаковые ли операции для вещественных и целых чисел?",
    "Answer": "2",
    "Info": "разные"
  },
  {
    "Question": "АТД создается",
    "Answer": "2",
    "Info": "программистом"
  },
  {
    "Question": "Процедура - это",
    "Answer": "1",
    "Info": "обобщенное понятие оператора"
  },
  {
    "Question": "С помощью чего создается АТД?",
    "Answer": "2",
    "Info": "с помощью алгоритмических языков"
  },
  {
    "Question": "Какие операции не нужны для создания АТД?",
    "Answer": "2",
    "Info": "операции деструкторы"
  },
  {
    "Question": "При проектировании АТД какого правила лучше придерживаться",
    "Answer": "3",
    "Info": "обязательный минимум операций для АТД"
  },
  {
    "Question": "Чем отличается первичный конструктор АТД от простого конструктора АТД?",
    "Answer": "3",
    "Info": "они не отличаются"
  },
  {
    "Question": "Что такое спецификация АТД",
    "Answer": "2",
    "Info": "это полное строгое описание АТД"
  },
  {
    "Question": "Что включает спецификация АТД?",
    "Answer": "3",
    "Info": "все перечисленное"
  },
  {
    "Question": "Что включает реализация АТД",
    "Answer": "4",
    "Info": "инкапсуляцию всего перечисленного"
  },
  {
    "Question": "Какими средствами реализуется АТД",
    "Answer": "2",
    "Info": "средствами объектно-ориентированного программирования"
  },
  {
    "Question": "Какой из способов представления АТД предпочтительнее",
    "Answer": "3",
    "Info": "абстрактный"
  },
  {
    "Question": "Какие составляющие включает спецификация АТД",
    "Answer": "1.6",
    "Info": "описание АТД, все пречисленное"
  },
  {
    "Question": "Можно ли представить структуру данных в виде АТД",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Можно ли создать АТД на базе других АТД",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Когда используется структура типа очередь ?",
    "Answer": "3",
    "Info": "в операционных системах ЭВМ"
  },
  {
    "Question": "Какие операции необходимы для создания АТД?",
    "Answer": "5",
    "Info": "все перечисленные"
  },
  {
    "Question": "Какие преимущества дает АТД перед обычным типом данных?",
    "Answer": "3",
    "Info": "рассматриваются более сложные данные и операции над ними"
  },
  {
    "Question": "Чем отличается целочисленный тип INTEGER от целочисленного типа WORD?",
    "Answer": "1",
    "Info": "требуемой памятью"
  },
  {
    "Question": "Чем отличаются оперативные структуры от внешних структур?",
    "Answer": "2",
    "Info": "создаются программистом для работы во внутренней памяти"
  },
  {
    "Question": "Что такое оперативные структуры данных?",
    "Answer": "1",
    "Info": "структуры, которые используются во внутренней памяти"
  },
  {
    "Question": "По какому признаку можно разделить структуры на связные и несвязные?",
    "Answer": "1",
    "Info": "каждый элемент структуры содержит поле указателя"
  },
  {
    "Question": "Какие структуры считаются связными?",
    "Answer": "4",
    "Info": "списки"
  },
  {
    "Question": "Какие структуры считаются несвязными?",
    "Answer": "1",
    "Info": "массивы"
  },
  {
    "Question": "Какие из перечисленных структур можно отнести к связным?",
    "Answer": "4",
    "Info": "граф"
  },
  {
    "Question": "Основные признаки статических структур",
    "Answer": "3",
    "Info": "размеры структуры и связи между элементами остаются неизменными"
  },
  {
    "Question": "Какие структуры относятся к статическим?",
    "Answer": "1",
    "Info": "массив"
  },
  {
    "Question": "Какие операции можно выполнять над таблицей, если она представлена как массив записей?",
    "Answer": "2",
    "Info": "удаление записи"
  },
  {
    "Question": "Может ли быть многоуровневая запись элементом таблицы?",
    "Answer": "1",
    "Info": "может"
  },
  {
    "Question": "Какие из перечисленных структур можно отнести к не связным?",
    "Answer": "1",
    "Info": "вектор"
  },
  {
    "Question": "Как классифицируются структуры по признаку изменчивости?",
    "Answer": "2",
    "Info": "статические, полустатические, динамические"
  },
  {
    "Question": "Какие структуры не относятся к статическим?",
    "Answer": "4",
    "Info": "граф"
  },
  {
    "Question": "Какая структура может содержать одинаковый элемент?",
    "Answer": "1",
    "Info": "списки"
  },
  {
    "Question": "Как можно представить таблицу?",
    "Answer": "3",
    "Info": "либо списком, либо массивом записей"
  },
  {
    "Question": "В каком случае представление таблицы в виде массива записей предпочтительней?",
    "Answer": "2",
    "Info": "когда необходима экономия оперативной памяти"
  },
  {
    "Question": "Как реализуется многоуровневая запись?",
    "Answer": "4",
    "Info": "деревом структур"
  },
  {
    "Question": "Какие операции выполняются над вектором?",
    "Answer": "4",
    "Info": "Все перечисленные"
  },
  {
    "Question": "Является ли множество структурой данных?",
    "Answer": "2",
    "Info": "нет"
  },
  {
    "Question": "Чем отличается множество от массива?",
    "Answer": "2",
    "Info": "Отношением между элементами"
  },
  {
    "Question": "Чем отличается множество от вектора?",
    "Answer": "2",
    "Info": "Отношением между элементами"
  },
  {
    "Question": "Чем отличается множество от списка?",
    "Answer": "1",
    "Info": "наличием отношений между элементами"
  },
  {
    "Question": "Множество - это упорядоченная структура или нет?",
    "Answer": "2",
    "Info": "нет"
  },
  {
    "Question": "В каких случаях удобно использовать множество?",
    "Answer": "2",
    "Info": "Когда элементы не упорядочены"
  },
  {
    "Question": "Чем отличается вектор от массива?",
    "Answer": "2",
    "Info": "размерностью"
  },
  {
    "Question": "Что из себя представляет каждый элемент вектора?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Могут ли быть элементы вектора разного типа?",
    "Answer": "2",
    "Info": "нет"
  },
  {
    "Question": "Вектор - это упорядоченная структура?",
    "Answer": "1",
    "Info": "да"
  },
  {
    "Question": "Может ли меняться размер вектора в процессе работы программы?",
    "Answer": "2",
    "Info": "нет"
  },
  {
    "Question": "Что из себя представляет дескриптор вектора?",
    "Answer": "2",
    "Info": "таблица параметров вектора, которую создаёт транслятор"
  },
  {
    "Question": "Зачем используется дескриптор вектора?",
    "Answer": "1",
    "Info": "для доступа к элементам вектора на физическом уровне"
  },
  {
    "Question": "Кем создается дескриптор?",
    "Answer": "3",
    "Info": "транслятором"
  },
  {
    "Question": "Какие операции выполняются над вектором?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Что такое поле или слот?",
    "Answer": "3",
    "Info": "Поле это часть записи"
  },
  {
    "Question": "Какой из перечисленных алгоритмов является наиболее \"плохим\"?",
    "Answer": "1",
    "Info": "полиномиальный"
  },
  {
    "Question": "Для какой операции над таблицей требуется в среднем (N+1)/2 сравнений?",
    "Answer": "2",
    "Info": "последовательный поиск"
  },
  {
    "Question": "Чем отличается множество от массива?",
    "Answer": "4",
    "Info": "всем перечисленным"
  },
  {
    "Question": "Какие структуры из перечисленных можно отнести к полустатическим?",
    "Answer": "2",
    "Info": "стек"
  },
  {
    "Question": "Какие основные признаки полустатических структур?",
    "Answer": "3",
    "Info": "размер структуры меняется, а отношения между элементами не меняются"
  },
  {
    "Question": "Какие структуры из перечисленных относятся к полустатическим структурам?",
    "Answer": "4",
    "Info": "все перечисленные"
  },
  {
    "Question": "Какие основные признаки динамических структур данных?",
    "Answer": "3",
    "Info": "меняется размер структуры и связи между данными"
  },
  {
    "Question": "Какие структуры из перечисленных не относятся к полустатическим структурам?",
    "Answer": "1",
    "Info": "таблица"
  },
  {
    "Question": "С помощью каких структур можно реализовать стек?",
    "Answer": "4",
    "Info": "Любая структура из перечисленных"
  },
  {
    "Question": "При обработке стека меняются ли связи между его элементами?",
    "Answer": "2",
    "Info": "Не меняются"
  },
  {
    "Question": "Когда применяется стек?",
    "Answer": "4",
    "Info": "в любом перечисленном случае"
  },
  {
    "Question": "Какие операции выполняются над стеком?",
    "Answer": "4",
    "Info": "любая из перечисленных"
  },
  {
    "Question": "Какие преимущества у стека перед массивом?",
    "Answer": "1",
    "Info": "не тратится время на вычисление адреса элемента"
  },
  {
    "Question": "Как осуществляется переход от логического представления стека к физическому?",
    "Answer": "2",
    "Info": "с помощью дескриптора"
  },
  {
    "Question": "Можно ли использовать стек для выражений в инфиксной форме?",
    "Answer": "2",
    "Info": "нельзя"
  },
  {
    "Question": "Когда целесообразно использовать стек в виде массива?",
    "Answer": "1",
    "Info": "Когда имеется большой непрерывный участок памяти"
  },
  {
    "Question": "Какая характерная операция для очереди?",
    "Answer": "2",
    "Info": "Включение элемента с одной стороны и исключение с другой стороны"
  },
  {
    "Question": "Какая операция не выполняется над очередью?",
    "Answer": "4",
    "Info": "поиск элемента"
  },
  {
    "Question": "Как можно реализовать очередь?",
    "Answer": "4",
    "Info": "Любым из перечисленных способов"
  },
  {
    "Question": "Какая характерная операция для дека?",
    "Answer": "2",
    "Info": "Включение и исключение элемента с любой стороны"
  },
  {
    "Question": "С помощью какой структуры можно реализовать кольцевую очередь ?",
    "Answer": "4",
    "Info": "с помощью любой из перечисленных структур"
  },
  {
    "Question": "Какой вариант формирования очереди можно считать НЕ эффективным ?",
    "Answer": "1",
    "Info": "массив при удалении элемента очередь сдвигается в начало"
  },
  {
    "Question": "Если размер очереди неизвестный, то какая структура наиболее подходит для её реализации ?",
    "Answer": "2",
    "Info": "односвязный список"
  },
  {
    "Question": "Основной недостаток реализации очереди с помощью односвязного списка в том, что....",
    "Answer": "2",
    "Info": "требуется дополнительная память для указателей"
  },
  {
    "Question": "Дек можно реализовать с помощью...",
    "Answer": "4",
    "Info": "любым из перечисленных способов"
  },
  {
    "Question": "С помощью каких структур можно реализовать очередь ?",
    "Answer": "4",
    "Info": "с помощью любой из перечисленных структур"
  },
  {
    "Question": "Основной недостаток реализации очереди на базе массива в том, что..."
  },
  {
    "Question": "Что можно назвать сортировкой?",
    "Answer": "2",
    "Info": "перемещение элементов в порядке возрастания или убывания значений"
  },
  {
    "Question": "Если элементы сортируемой последовательности достаточно большие, как удобно сортировать ее?",
    "Answer": "4",
    "Info": "сортировкой таблицы адресов"
  },
  {
    "Question": "Если записи с одинаковыми ключами остаются в прежнем порядке, то это...",
    "Answer": "1",
    "Info": "устойчивая сортировка"
  },
  {
    "Question": "Если сортируемые записи находятся в оперативной памяти, то это…",
    "Answer": "2",
    "Info": "внутренняя сортировка"
  },
  {
    "Question": "Если некоторые из сортируемых данных находятся во внешней памяти, то это…",
    "Answer": "3",
    "Info": "внешняя сортировка"
  },
  {
    "Question": "Сортировка классифицируется как внутренняя если…",
    "Answer": "1",
    "Info": "сортируемые данные находятся в оперативной памяти"
  },
  {
    "Question": "Сортировка классифицируется как внешняя если…",
    "Answer": "2",
    "Info": "сортируемые записи находятся во вспомогательной памяти"
  },
  {
    "Question": "Сортировка называется устойчивой если…",
    "Answer": "3",
    "Info": "сортируемые записи с одинаковыми ключами остаются в прежнем порядке"
  },
  {
    "Question": "Какие факторы влияют на производительность сортировки?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Как определяются временные затраты сортировки?",
    "Answer": "4",
    "Info": "выявление среднего времени посредством анализа разных случаев сортировки"
  },
  {
    "Question": "Какие алгоритмы относятся к алгоритмам внутренних сортировок?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Какие бывают виды сортировок вставками?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "При сортировке простыми вставками очередной элемент вставляется…",
    "Answer": "1",
    "Info": "после меньшего"
  },
  {
    "Question": "В каком из перечисленных случаев сортировка простыми вставками является более эффективной?",
    "Answer": "1",
    "Info": "чем ближе файл к отсортированному виду"
  },
  {
    "Question": "При использовании метода бинарные вставки 64-ый элемент сначала будет сравниваться…",
    "Answer": "2",
    "Info": "с 32 элементом"
  },
  {
    "Question": "Какой метод вставок элементов может решить проблему сдвига элементов сортировки?",
    "Answer": "4",
    "Info": "двухпутевые вставки"
  },
  {
    "Question": "Какова сложность метода в среднем случае?",
    "Answer": "1",
    "Info": "0 (n)"
  },
  {
    "Question": "Какова сложность метода в наихудшем случае?",
    "Answer": "2",
    "Info": "0 (n(log n)^2)"
  },
  {
    "Question": "У какой из перечисленных сортировок среднее время выполнения равно О(n^2)?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "У какой из перечисленных сортировок среднее время выполнения не равно О(n^2)?",
    "Answer": "4",
    "Info": "сортировка Шелла"
  },
  {
    "Question": "У какой из перечисленных сортировок среднее время выполнения равно О(n)?",
    "Answer": "3",
    "Info": "сортировка с вычислением адреса"
  },
  {
    "Question": "У какой из перечисленных сортировок среднее время выполнения равно О(n^1,25)",
    "Answer": "2",
    "Info": "сортировка Шелла"
  },
  {
    "Question": "Какие сортировки можно отнести к обменным?",
    "Answer": "4",
    "Info": "все ответы верны"
  },
  {
    "Question": "Какое существует название у \"карманной сортировки\"?",
    "Answer": "1",
    "Info": "цифровая сортировка"
  },
  {
    "Question": "Какая из перечисленных сортировок относится к обменной сортировке с разделением?",
    "Answer": "2",
    "Info": "быстрая сортировка"
  },
  {
    "Question": "Какая из перечисленных сортировок относится к обменной сортировке со слиянием?",
    "Answer": "1",
    "Info": "параллельная сортировка Бэтчера"
  },
  {
    "Question": "Какая из перечисленных сортировок считается самой неэффективной?",
    "Answer": "2",
    "Info": "сортировка методом пузырька"
  },
  {
    "Question": "Какой вид сортировки считается эффективным для больших файлов (таблиц)?",
    "Answer": "1",
    "Info": "быстрая сортировка"
  },
  {
    "Question": "В какой из перечисленных сортировок отличительной чертой является двоичное представление ключей и сравнение отдельных битов ключей?",
    "Answer": "4",
    "Info": "обменная поразрядная сортировка"
  },
  {
    "Question": "В какой из перечисленных сортировок порядок сложности составляет О (m*n)? ",
    "Answer": "1",
    "Info": "цифровая сортировка"
  },
  {
    "Question": "Почему нельзя применять алгоритмы внутренней сортировки для внешней сортировки?",
    "Answer": "2",
    "Info": "главным параметром внешней сортировки является количество обращений к ВЗУ"
  },
  {
    "Question": "Относится ли блочная сортировка к алгоритмам, не основанным на сравнениях?",
    "Answer": "1",
    "Info": "относится"
  },
  {
    "Question": "Какие методы сортировки самые эффективные?",
    "Answer": "4",
    "Info": "все ответы справедливы"
  },
  {
    "Question": "Пирамидальная сортировка является улучшением...",
    "Answer": "1",
    "Info": "сортировки выбором"
  },
  {
    "Question": "Какая сортировка является наиболее быстрой для массива из 20 элементов?",
    "Answer": "1",
    "Info": "сортировка простыми вставками"
  },
  {
    "Question": "Какая сортировка является наиболее эффективной для больших массивов?",
    "Answer": "1",
    "Info": "быстрая сортировка"
  },
  {
    "Question": "Какая сортировка является наиболее эффективной для длинных списков/файлов?",
    "Answer": "2",
    "Info": "сортировка слиянием"
  },
  {
    "Question": "У какого алгоритма сортировки сложность равна O (n^2)",
    "Answer": "1.3",
    "Info": "пузырьковая,вставками"
  },
  {
    "Question": "У какого алгоритма сортировки сложность равна O(n*logn)",
    "Answer": "1",
    "Info": "пирамидальная"
  },
  {
    "Question": "Где можно найти наиболее полную информацию о методах сортировки?",
    "Answer": "3",
    "Info": "Кнут Искусство программирования том 3"
  },
  {
    "Question": "Где можно найти наиболее полную информацию о методах сортировки?",
    "Answer": "3",
    "Info": "Кнут Искусство программирования том 3"
  },
  {
    "Question": "Применимы ли методы внутренней сортировки для данных на внешних носителях?",
    "Answer": "2",
    "Info": "не применимы"
  },
  {
    "Question": "Применимы ли методы внешней сортировки для сортировки данных в оперативной памяти?",
    "Answer": "3",
    "Info": "не применимы"
  },
  {
    "Question": "Что является главным при выборе алгоритма внутренней сортировки?",
    "Answer": "4",
    "Info": "зависит от конкретной ситуации"
  },
  {
    "Question": "Какие факторы влияют на производительность сортировки?",
    "Answer": "5",
    "Info": "все перечисленные случаи"
  },
  {
    "Question": "Какие факторы не влияют на производительность сортировки?",
    "Answer": "4",
    "Info": "начальный элемент сортировки"
  },
  {
    "Question": "Можно ли сортировать массив?",
    "Answer": "2",
    "Info": "нельзя"
  },
  {
    "Question": "Когда применяется сортировка таблицы адресов ?",
    "Answer": "2",
    "Info": "когда размер сортируемых записей большой"
  },
  {
    "Question": "Можно ли сортировать изображения ?",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Зачем сортируются данные ?",
    "Answer": "2",
    "Info": "чтобы быстро осуществлялись запросы"
  },
  {
    "Question": "Сортировка называется устойчивовой, если...",
    "Answer": "2",
    "Info": "записи с одинаковыми ключами остаются в прежнем порядке"
  },
  {
    "Question": "Сортировка называется внутренней если....",
    "Answer": "2",
    "Info": "все данные находятся в ОП"
  },
  {
    "Question": "Сортировка является внешней, если...",
    "Answer": "1",
    "Info": "только часть данных находится в ОП"
  },
  {
    "Question": "Зачем надо знать алгоритмы сортировки ?",
    "Answer": "5",
    "Info": "во всех перечисленных случаях"
  },
  {
    "Question": "Когда применяется понятие серия ?",
    "Answer": "2",
    "Info": "при внешней сортировке"
  },
  {
    "Question": "Когда применяется понятие проход ?",
    "Answer": "2",
    "Info": "при внешней сортировке"
  },
  {
    "Question": "Какой главный критерий эффективности алгоритма сортировки ?",
    "Answer": "1",
    "Info": "время сортировки"
  },
  {
    "Question": "Если алгоритм сортировки имееет временную сложность O (n log n)",
    "Answer": "3",
    "Info": "при разных n может вести себя по-разному"
  },
  {
    "Question": "В каком диапозоне изменяется сложность алгоритмов сортировки ?",
    "Answer": "2",
    "Info": "от О (n^2) до О (n log n) "
  },
  {
    "Question": "Какая ситуация используется для оценки эфективности анализа сортировки ?",
    "Answer": "4",
    "Info": "все перечисленные ситуации"
  },
  {
    "Question": "Как определяется время работы алгоритма сортировки ?",
    "Answer": "3",
    "Info": "любым способом из перечисленных"
  },
  {
    "Question": "Какие факторы определяют выбор метода сортировки ?",
    "Answer": "4",
    "Info": "все перечисленные факторы"
  },
  {
    "Question": "В чем суть алгоритма сортировки вставками ?",
    "Answer": "1",
    "Info": "очередной элемент вставляется на своё место в уже упорядоченной последовательности"
  },
  {
    "Question": "В чём суть алгоритмов обменных сортировок ?",
    "Answer": "1",
    "Info": "очередной элемент вставляется на своё место в уже упорядоченной последовательности"
  },
  {
    "Question": "В чём суть алгоритмов сортировки выбором",
    "Answer": "1",
    "Info": "очередной элемент вставляется на своё место в уже упорядоченной последовательности"
  },
  {
    "Question": "Какая из сортировок относится к сортировкам вставками ?",
    "Answer": "3",
    "Info": "сортировка Сnелла"
  },
  {
    "Question": "Какая из сортировок не относится к сортировкам вставками ?",
    "Answer": "4",
    "Info": "квадратичная сортировка"
  },
  {
    "Question": "Когда эффективна сортировка простыми вставками ?",
    "Answer": "1",
    "Info": "когда последовательность небольшая и почти упорядочена"
  },
  {
    "Question": "Когда применяется сортировка двухпутёвыми вставками ?",
    "Answer": "1",
    "Info": "для массивов"
  },
  {
    "Question": "Когда применяется сортировка быстрыми вставками ?",
    "Answer": "1",
    "Info": "для массивов"
  },
  {
    "Question": "Какую сложность имеет сортировка простыми вставками ?",
    "Answer": "3",
    "Info": "О (n^2)"
  },
  {
    "Question": "Какую сложность имеет сортировка бинарными вставками?",
    "Answer": "3",
    "Info": "О (n^2)"
  },
  {
    "Question": "Какую сложность имеет двухпутёвая сортировка?",
    "Answer": "3",
    "Info": "О (n^2)"
  },
  {
    "Question": "Какую сложность имеет сортировка Шелла?",
    "Answer": "4",
    "Info": "О (n^1,25)"
  },
  {
    "Question": "Какую сложность имеет сортировка вставкой в список ?",
    "Answer": "3",
    "Info": "О (n^2)"
  },
  {
    "Question": "Может ли сортировка сложности О(n^2) в некоторых ситуациях быть более эффективной, чем О(n log) ?",
    "Answer": "1",
    "Info": "может"
  },
  {
    "Question": "Какая из сортировок требует дополнительную память ?",
    "Answer": "3",
    "Info": "сортировка с выч. адреса"
  },
  {
    "Question": "Какая из сортировок требует дополнительную память ?",
    "Answer": "3",
    "Info": "вставка в список"
  },
  {
    "Question": "Какая из сортировок требует дополнительную память ?",
    "Answer": "4",
    "Info": "все перечисленные"
  },
  {
    "Question": "Какая из сортировок не относится к обменным сортировкам ?",
    "Answer": "4",
    "Info": "пирамидальная сортировка"
  },
  {
    "Question": "Какая из сортировок относится к обменным сортировкам ?",
    "Answer": "2",
    "Info": "параллельная сортировка Бетчера"
  },
  {
    "Question": "Какая из перечисленных сортировок требует дополнительную память ?",
    "Answer": "4",
    "Info": "цифровая сортировка"
  },
  {
    "Question": "Какая из перечисленных сортировок самая неэффективная ?",
    "Answer": "4",
    "Info": "метод пузырька"
  },
  {
    "Question": "Какая из перечисленных сортировок самая эффективная ?",
    "Answer": "2",
    "Info": "параллельная сортировка Бейтера"
  },
  {
    "Question": "Какая сортировка быстрее ?",
    "Answer": "2",
    "Info": "Шейкер сортировка"
  },
  {
    "Question": "Какую сложность имеет Шейкер сортировка",
    "Answer": "1",
    "Info": "О (n^2)"
  },
  {
    "Question": "Какую сложность имеет пузырьковая сортировка ?",
    "Answer": "1",
    "Info": "О (n^2)"
  },
  {
    "Question": "Какую сложность имеет быстрая сортировка ?",
    "Answer": "2",
    "Info": "О (n log n)"
  },
  {
    "Question": "Какую сложность имеет параллельная сортировка Бэтчера?",
    "Answer": "5",
    "Info": "О (1/2 [n log n] x log n +1)"
  },
  {
    "Question": "Какую сложность имеет цифровая сортировка ?",
    "Answer": "5",
    "Info": "О (m*n)"
  },
  {
    "Question": "Какую сложность имеет поразрядная обменная сортировка ?",
    "Answer": "2",
    "Info": "О (n log n)"
  },
  {
    "Question": "Какую сложность имеет сортировка простым выбором?",
    "Answer": "1",
    "Info": "О (n^2)"
  },
  {
    "Question": "Какую сложность имеет сортировка квадратичным выбором ?",
    "Answer": "5",
    "Info": "О (n (квадратный корень от n) )"
  },
  {
    "Question": "Какую сложность имеет сортировка выбором из дерева ?",
    "Answer": "2",
    "Info": "О (n log n)"
  },
  {
    "Question": "Какую сложность имеет сортировка методом турнира с выбыванием?",
    "Answer": "2",
    "Info": "О (n log n)"
  },
  {
    "Question": "Какую сложность имеет пирамидальная сортировка ?",
    "Answer": "2",
    "Info": "О (n log n)"
  },
  {
    "Question": "Какая из сортировок требует дополнительной памяти ?",
    "Answer": "2",
    "Info": "квадратичная сортировка"
  },
  {
    "Question": "Какая из сортировок требует дополнительной памяти ?",
    "Answer": "2",
    "Info": "сортировка методом турнира с выбиванием"
  },
  {
    "Question": "Где можно узнать сложность алгоритма сортировки ?",
    "Answer": "4",
    "Info": "Кнут. Искусство программирования том 3"
  },
  {
    "Question": "Какая из сортировок не требует дополнительной памяти ?",
    "Answer": "3",
    "Info": "сортировка выбором из дерева"
  },
  {
    "Question": "Какая из сортировок не требует дополнительной памяти ?",
    "Answer": "3",
    "Info": "пирамидальная сортировка"
  },
  {
    "Question": "Какая сортировка наиболее эффективна для почти отсортированной последовательности ?",
    "Answer": "2",
    "Info": "сортировка выбором из дерева"
  },
  {
    "Question": "В каких случаях быстрая сортировка наиболее эффективна ?",
    "Answer": "2",
    "Info": "для достаточно большой последовательности"
  },
  {
    "Question": "В чем недостаток быстрой сортировки ?",
    "Answer": "2",
    "Info": "требует дополнительной памяти"
  },
  {
    "Question": "Для чего необходима память в быстрой сортировке ?",
    "Answer": "2",
    "Info": "для стека, хранящего границы последовательности"
  },
  {
    "Question": "Чему равен размер требуемой памяти для быстрой сортировки ?",
    "Answer": "2",
    "Info": "log n"
  },
  {
    "Question": "В каком случае сложность быстрой сортировки равна О (n log n) ?",
    "Answer": "4",
    "Info": "при n -> к бесконечности"
  },
  {
    "Question": "В каком случае алгоритмы параллельной сортировки Бетлера наиболее эффективны ?",
    "Answer": "2",
    "Info": "когда сортировка выполняется на многопроцессорнной системе"
  },
  {
    "Question": "Когда обменная поразрядная сортировка не эффективна ?",
    "Answer": "3",
    "Info": "когда имеются одинаковые элементы"
  },
  {
    "Question": "Какой из методов внутренней сортировки можно считать оптимальным ?",
    "Answer": "4",
    "Info": "оптимальной сортировки не существует"
  },
  {
    "Question": "Существует ли предел скорости сортировки ?",
    "Answer": "1",
    "Info": "существует"
  },
  {
    "Question": "Существует ли предел скорости оптимальной сортировки ?",
    "Answer": "2",
    "Info": "существует при малом числе элементов"
  },
  {
    "Question": "Минимальное число сравнений в наихудшем случае для сортировки n элементов равно:",
    "Answer": "2",
    "Info": "n * log n"
  },
  {
    "Question": "Среднее число сравнений для метода сортировок равно:",
    "Answer": "2",
    "Info": "длине внешнего пути дерева, делённое на n!"
  },
  {
    "Question": "Чему равна минимальная длина внешнего пути дерева сравнений ?",
    "Answer": "3",
    "Info": "ln N, где N - число внешних узлов дерева сравнений"
  },
  {
    "Question": "Существуют ли методы сортировки у которых достигается нижняя граница длины внешнего пути ?",
    "Answer": "2",
    "Info": "существует при малом числе элементов"
  },
  {
    "Question": "Какие цели стоят при выборе алгоритма сортировки ?",
    "Answer": "4",
    "Info": "любая из перечисленных"
  },
  {
    "Question": "В дереве сравнений для сортировки n элементов без избыточных сравнений имеется:",
    "Answer": "4",
    "Info": "n! листьев"
  },
  {
    "Question": "Какие из перечисленных методов требуют меньше сравнений ?",
    "Answer": "1",
    "Info": "бинарные вставки"
  },
  {
    "Question": "Чему равно среднее число сравнений при оценке метода сортировки ?",
    "Answer": "3",
    "Info": "длине внешнего пути, деленного на 2"
  },
  {
    "Question": "Длина внешнего пути дерева сравнений это:",
    "Answer": "2",
    "Info": "сумма всех расстояний от корня деева до каждого листа"
  },
  {
    "Question": "Минимальная длина внешнего пути дерева сравнений равна:",
    "Answer": "1",
    "Info": "lg n"
  },
  {
    "Question": "Нижняя оценка среднего числа сравнений при сортировке - это:",
    "Answer": "2",
    "Info": "минимальное число среднего числа сравнений"
  },
  {
    "Question": "Какова сложность алгоритма порядковой сортировки ?",
    "Answer": "2",
    "Info": "O (n)"
  },
  {
    "Question": "Какие частичные задачи можно отнести к задачам порядковой статистики ?",
    "Answer": "4",
    "Info": "любая из перечисленных"
  },
  {
    "Question": "Можно ли применять алгоритмы порядковой статистики для нескольких элементов одновременно ?",
    "Answer": "2",
    "Info": "нужно"
  },
  {
    "Question": "Одинаковый ли алгоритм для отыскания нескольких порядковых статистик ?",
    "Answer": "2",
    "Info": "разный"
  },
  {
    "Question": "Необходима ли дополнительная память для отыскания порядковой статистики ?",
    "Answer": "2",
    "Info": "надо, когда необходимо сохранить исходную последовательность"
  },
  {
    "Question": "Что такое опорный элемент при вычислении порядковой статистики ?",
    "Answer": "2",
    "Info": "произвольный элемент, разделяющий последовательность на 2 части"
  },
  {
    "Question": "Что такое порядковая статистика ?",
    "Answer": "2",
    "Info": "алгоритм определения местоположения только K-го элемента"
  },
  {
    "Question": "Какую сложность имеет сортировка с вычислением адреса?",
    "Answer": "1",
    "Info": "О (n)"
  },
  {
    "Question": "С помощью какой структуры можно представить узел дерева?",
    "Answer": "2",
    "Info": "записью"
  },
  {
    "Question": "К какой характерной группе отношений относятся деревья?",
    "Answer": "2",
    "Info": "отношения одного ко многим"
  },
  {
    "Question": "К какой характерной группе отношений относятся графы?",
    "Answer": "3",
    "Info": "отношения многих ко многим"
  },
  {
    "Question": "Когда целесообразно применение бинарных деревьев?",
    "Answer": "1",
    "Info": "для работы в оперативной памяти"
  },
  {
    "Question": "Деревом называется граф, который...",
    "Answer": "4",
    "Info": "связен и не содержит ни одного цикла"
  },
  {
    "Question": "Какими свойствами обладают \"остовные деревья\"?",
    "Answer": "4",
    "Info": "все перечисленные свойства"
  },
  {
    "Question": "Что понимается под структурой данных - \"лес\"?",
    "Answer": "4",
    "Info": "Это множество деревьев"
  },
  {
    "Question": "Если в дереве узел  X ссылается на узел Y, то...",
    "Answer": "1.2",
    "Info": "X - называется родителем, Y- называется сыном"
  },
  {
    "Question": "Два дерева называются подобными, если...",
    "Answer": "1",
    "Info": "они имеют одинаковую структуру"
  },
  {
    "Question": "Если два дерева подобны и вершины у них содержат одинаковую информацию то это?",
    "Answer": "2",
    "Info": "эквивалентные деревья"
  },
  {
    "Question": "дерево считаестя \"вырожденным\" если...",
    "Answer": "1",
    "Info": "дерево с одной вершиной"
  },
  {
    "Question": "Какие деревья относятся к n-арным?",
    "Answer": "1,2,3",
    "Info": "синтаксические,нагруженные,цифрового поиска"
  },
  {
    "Question": "Какие деревья относятся к сильноветвящимся?",
    "Answer": "1.2",
    "Info": "2-3-4 деревья,B++ деревья"
  },
  {
    "Question": "какие деревья относятся к многомерным?",
    "Answer": "3",
    "Info": "R - деревья"
  },
  {
    "Question": "Какие деревья называются полностью сбалансированными?",
    "Answer": "3",
    "Info": "Все ответы верны"
  },
  {
    "Question": "Когда рекомендуется представление дерева с помощью массива?",
    "Answer": "4",
    "Info": "Все ответы верны"
  },
  {
    "Question": "Можно ли представить любое бинарное дерево с помощью префиксного кода?",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Когда используется структура \"биномиальная куча\"?",
    "Answer": "2",
    "Info": "Для представления дерева с помощью массива"
  },
  {
    "Question": "Зачем необходима процедура обхода деревьев?",
    "Answer": "3",
    "Info": "Для записи выражений в определённой форме"
  },
  {
    "Question": "Зачем прошиваются деревья?",
    "Answer": "2",
    "Info": "Для ускорения обхода деревьев"
  },
  {
    "Question": "Можно ли любое случайное дерево преобразовать в двоичное дерево?",
    "Answer": "1",
    "Info": "Можно"
  },
  {
    "Question": "Можно ли заданный лес деревьев преобразовать в бинарное дерево?",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Какова высота идеально сбалансированных бинарных деревьев?",
    "Answer": "1",
    "Info": "logn + 1"
  },
  {
    "Question": "Какое дерево называется деревом Фиббоначи?",
    "Answer": "2",
    "Info": "Дерево с показателем сбалансированности всех узлов либо +1, либо -1"
  },
  {
    "Question": "Сколько деревьев Фиббоначи существует?",
    "Answer": "2",
    "Info": "2"
  },
  {
    "Question": "Чему равна максимальная высота ВВ-дерева?",
    "Answer": "2",
    "Info": "2 log(n+1)"
  },
  {
    "Question": "Чему равна высота полностью сбалансированного ВВ-дерева?",
    "Answer": "1",
    "Info": "log(n+1)"
  },
  {
    "Question": "Какие преимущества у ВВ-деревьев перед АВЛ-деревьями?",
    "Answer": "1",
    "Info": "можно задавать показатель сбалансированности"
  },
  {
    "Question": "Какие деревья называются красно-черными деревьями?",
    "Answer": "5",
    "Info": "деревья, у которых выполняются все перечисленные требования"
  },
  {
    "Question": "Чему равна максимальная высота красно-черного дерева?",
    "Answer": "4",
    "Info": "2logn+1"
  },
  {
    "Question": "Сколько полей имеет вершина красно-черного дерева?",
    "Answer": "3",
    "Info": "5"
  },
  {
    "Question": "В чем достоинство деревьев промежутков перед другими сбалансированными деревьями?",
    "Answer": "2",
    "Info": "позволяют ответить на запрос - принадлежит ли ключ поиска заданному интервалу"
  },
  {
    "Question": "Какие деревья называются деревьями расширений?",
    "Answer": "4",
    "Info": "Все ответы правильные"
  },
  {
    "Question": "Какие деревья называются выровненными?",
    "Answer": "2",
    "Info": "Все листья находятся на одном уровне"
  },
  {
    "Question": "Являются ли деревья цифрового поиска упорядоченными?",
    "Answer": "1",
    "Info": "да"
  },
  {
    "Question": "Можно ли использовать деревья цифрового поиска для сортировки?",
    "Answer": "3",
    "Info": "да при определённом обходе дерева"
  },
  {
    "Question": "В каких случаях рекомендуется использование trie-деревьев?",
    "Answer": "1",
    "Info": "при построении словарей"
  },
  {
    "Question": "Где используются синтаксические деревья?",
    "Answer": "1",
    "Info": "в трансляторах"
  },
  {
    "Question": "Какие преимущества у сильноветвящегося дерева по сравнению с бинарным деревом?",
    "Answer": "4",
    "Info": "размер узла дерева эквивалентен сегменту внешней памяти"
  },
  {
    "Question": "Когда применяются В - деревья?",
    "Answer": "2",
    "Info": "Для работы во внешней памяти"
  },
  {
    "Question": "В чем заключается отличие В + + деревьев от В + деревьев?",
    "Answer": "2",
    "Info": "стратегией расщеления/объединения узлов при балансировке"
  },
  {
    "Question": "Чем отличаются В* - деревья от В - деревьев?",
    "Answer": "1",
    "Info": "более плотной упаковкой ключей в узлах"
  },
  {
    "Question": "деревом поиска называется дерево, содержащеее в узле:",
    "Answer": "1",
    "Info": "ключ"
  },
  {
    "Question": "Когда используются корневые деревья?",
    "Answer": "4",
    "Info": "во всех перечисленных случаях"
  },
  {
    "Question": "Какую информацию может содержать узел корневого дерева?",
    "Answer": "5",
    "Info": "любую из перечисленных"
  },
  {
    "Question": "Какое дерево называется упорядоченным?",
    "Answer": "1",
    "Info": "у которого ключи в левой ветви меньше ключей в правой ветви"
  },
  {
    "Question": "Можно ли представить дерево с помощью массива?",
    "Answer": "1",
    "Info": "Можно"
  },
  {
    "Question": "Чем отличаются n-арные деревья от бинарных?",
    "Answer": "1",
    "Info": "Количеством  указателей в узлах"
  },
  {
    "Question": "Можно ли преобразовать n-арные деревья в бинарные?",
    "Answer": "1",
    "Info": "Можно"
  },
  {
    "Question": "Чем отличаются n-арные деревья от сильноветвящихся?",
    "Answer": "2",
    "Info": "Количеством ключей  в узлах"
  },
  {
    "Question": "К какому классу деревьев относятся деревья цифрового поиска?",
    "Answer": "2",
    "Info": "n-арные"
  },
  {
    "Question": "К какому классу деревьев относятся синтаксические деревья ?",
    "Answer": "2",
    "Info": "n-арные"
  },
  {
    "Question": "К какому классу деревьев относятся нагруженные деревья ?",
    "Answer": "1",
    "Info": "бинарные"
  },
  {
    "Question": "К какому классу деревьев относятся АВЛ-деревья ?",
    "Answer": "1",
    "Info": "бинарные"
  },
  {
    "Question": "К какому классу деревьев относятся оптимальные деревья ?",
    "Answer": "1",
    "Info": "бинарные"
  },
  {
    "Question": "К какому классу деревьев относятся красно-чёрные деревья ?",
    "Answer": "1",
    "Info": "бинарные"
  },
  {
    "Question": "К какому классу деревьев относятся ВВ-деревья ?",
    "Answer": "1",
    "Info": "бинарные"
  },
  {
    "Question": "К какому классу деревьев относятся деревья расширений?",
    "Answer": "1",
    "Info": "бинарные"
  },
  {
    "Question": "К какому классу деревьев относятся 2-3 деревья ?",
    "Answer": "3",
    "Info": "сильноветвящиеся"
  },
  {
    "Question": "К какому классу деревьев относятся 2-3-4 деревья ?",
    "Answer": "3",
    "Info": "сильноветвящиеся"
  },
  {
    "Question": "К какому классу деревьев относятся В-деревья ?",
    "Answer": "3",
    "Info": "сильноветвящиеся"
  },
  {
    "Question": "К какому классу деревьев относятся R-деревья ?",
    "Answer": "4",
    "Info": "многомерные"
  },
  {
    "Question": "К какому классу деревьев относятся k-d деревья ?",
    "Answer": "4",
    "Info": "многомерные"
  },
  {
    "Question": "Деревом называется граф, который...",
    "Answer": "5",
    "Info": "связен и не содержит ни одного цикла"
  },
  {
    "Question": "Какое дерево называют полным бинарным деревом высоты h?",
    "Answer": "3",
    "Info": "Дерево, у которого все листья находятся на одном уровне и степень исхода каждого узла равна 2"
  },
  {
    "Question": "Можно ли преобразовать сильноветвящиеся  деревья в бинарные?",
    "Answer": "3",
    "Info": "можно, но не имеет смысла"
  },
  {
    "Question": "Какие деревья относятся к бинарным?"
  },
  {
    "Question": "Если некоторые из сортируемых данных находятся во вспомогательной памяти, то это…",
    "Answer": "3",
    "Info": "внешняя сортировка"
  },
  {
    "Question": "Что такое серия?",
    "Answer": "2",
    "Info": "отсортированная часть последовательности"
  },
  {
    "Question": "Что такое проход?",
    "Answer": "2",
    "Info": "выполнение одного цикла внешней сортировки"
  },
  {
    "Question": "Что является главным при выборе алгоритма внешней сортировки?",
    "Answer": "4",
    "Info": "Количество обращений ко внешнему устройству"
  },
  {
    "Question": "Главное отличие алгоритмов внешней сортировки между собой",
    "Answer": "2",
    "Info": "количество обращений ко внешним устройствам"
  },
  {
    "Question": "Может ли внешняя сортировка сортировать списки?",
    "Answer": "2",
    "Info": "Не может"
  },
  {
    "Question": "Какая операция внешней сортировки определяет время всей сортировки ?",
    "Answer": "1",
    "Info": "найти нужный блок во внешней памяти"
  },
  {
    "Question": "Какой фактор(ы) определяет эффективность внешней сортировки ?",
    "Answer": "5",
    "Info": "все перечисленные"
  },
  {
    "Question": "Какой из параметров меньше всего влияет на эффективность внешней сортировки ?",
    "Answer": "4",
    "Info": "время выполнения операций в оперативной памяти"
  },
  {
    "Question": "Прогоном называется...",
    "Answer": "1",
    "Info": "полное прохождение файла"
  },
  {
    "Question": "Сортировка называется двухпутевым слиянием, если...",
    "Answer": "2",
    "Info": "сортируемый файл разбивается на 2 вспомогательных файла"
  },
  {
    "Question": "Фазой реализации сортировки называется....",
    "Answer": "1",
    "Info": "распределение данных по вспомогательным файлам"
  },
  {
    "Question": "В двухфазной сортировке отдельно реализуются...",
    "Answer": "1",
    "Info": "распределение данных по вспомогательным файлам"
  },
  {
    "Question": "В однофазной сортировке отдельно реализуются...",
    "Answer": "3",
    "Info": "распределение и слияние"
  },
  {
    "Question": "Многопутевое слияние - это:",
    "Answer": "2",
    "Info": "используется много вспомогательных файлов"
  },
  {
    "Question": "В чем суть алгоритма внешней двухпутевой двухфазной сортировки простым слиянием ?",
    "Answer": "2",
    "Info": "сближение близких элементов в одну группу"
  },
  {
    "Question": "Какая сортировка быстрее ?",
    "Answer": "2",
    "Info": "двухпутевая однофазная (сбалансированная)"
  },
  {
    "Question": "Какая сортировка требует больше дополнительной памяти",
    "Answer": "2",
    "Info": "двухпутевая однофазная (сбалансированная)"
  },
  {
    "Question": "Чему равно количество обращений ко внешнему устройству при внешней двухфазной двухпутевой сортировке ?",
    "Answer": "1",
    "Info": "2*n*log n, где n- количество частей"
  },
  {
    "Question": "Чему равно количество обращений ко внешнему устройству для двухпутевой однофазной сортировки ?",
    "Answer": "4",
    "Info": "n*log n"
  },
  {
    "Question": "Сколько серий содержит файл, состоящий из элементов 15,19,49,17,16,34,28,47 ?",
    "Answer": "3",
    "Info": "4"
  },
  {
    "Question": "Сколько серий содержит файл, состоящий из элементов 29,18,47,33,14,26,25,24",
    "Answer": "2",
    "Info": "6"
  },
  {
    "Question": "Какие условия являются признаками конца внешней сортировки ?",
    "Answer": "4",
    "Info": "любой из перечисленных"
  },
  {
    "Question": "Чему равно количество проходов при сбалансированном двухпутевом слиянии для последовательности 31,17,05,59,13,41,67,43,11,23,29,47 ?",
    "Answer": "2",
    "Info": "4"
  },
  {
    "Question": "Чему равно количество пересылок при многопутевом сбалансированном сиянии ?",
    "Answer": "1",
    "Info": "n log N n , где N- N путевое слияние, n - количество частей"
  },
  {
    "Question": "В каком случае количество проходов меньше ?",
    "Answer": "3",
    "Info": "при многопутевом двухфазном слиянии"
  },
  {
    "Question": "В каком случае количество проходов больше ?",
    "Answer": "1",
    "Info": "при двухпутевом двухфазном слиянии"
  },
  {
    "Question": "В чем преимущество однофазной сортировки перед двухфазной ?",
    "Answer": "1",
    "Info": "работает быстрее"
  },
  {
    "Question": "В чем преимущество двуфазной сортировки перед однофазной ?",
    "Answer": "2",
    "Info": "не требует дополнительной памяти"
  },
  {
    "Question": "В чём преимущество многопутевой однофазной сортировки перед двухпутевой однофазной ?",
    "Answer": "2",
    "Info": "меньше число проходов"
  },
  {
    "Question": "В чем преимущество многопутевой однофазной сортировки перед многопутевой двухфазной ?",
    "Answer": "2",
    "Info": "работает быстрее"
  },
  {
    "Question": "Если длина серий на этапе распределений по файлам будет большая, то...",
    "Answer": "2",
    "Info": "количество проходов уменьшается"
  },
  {
    "Question": "Что можно сделать для уменьшения числа проходов ?",
    "Answer": "4",
    "Info": "все перечисленное"
  },
  {
    "Question": "Сортировка естественным слиянием - это...",
    "Answer": "2",
    "Info": "слияние двух очередных серий"
  },
  {
    "Question": "В чём преимущество двухпутевого двухфазного естественного слияния перед двухпутевым двухфазным слиянием ? ",
    "Answer": "2",
    "Info": "меньше число проходов"
  },
  {
    "Question": "Когда сортировка естественным слиянием проходит более эффективно ?",
    "Answer": "2",
    "Info": "количество серий во вспомогательных файлах примерно одинаково"
  },
  {
    "Question": "Естественное слияние называется сбалансированным, если...",
    "Answer": "1",
    "Info": "число серий во вспомогательных файлах отличается не более чем на 1"
  },
  {
    "Question": "Какая из сортировок не относится к профессональным...",
    "Answer": "4",
    "Info": "многопутевая"
  },
  {
    "Question": "Какие пути позволяют повысить эффективность внешней сортировки ?",
    "Answer": "5",
    "Info": "всё перечисленноее"
  },
  {
    "Question": "Где можно найти наиболее полную информацию по одномерному поиску ?",
    "Answer": "4",
    "Info": "Д. Кнут Искусство программирования. т.3"
  },
  {
    "Question": "Где можно найти наиболее полную информацию по одномерному поиску ?",
    "Answer": "3",
    "Info": "Д. Кнут Искусство программирования. т.3"
  },
  {
    "Question": "Одномерный поиск используется для....",
    "Answer": "4",
    "Info": "поиска по ключу"
  },
  {
    "Question": "Одномерный поиск используется для поиска....",
    "Answer": "2",
    "Info": "в структуринованной информации"
  },
  {
    "Question": "Информационный поиск - это технология поиска...",
    "Answer": "1",
    "Info": "в неструктурированной информации"
  },
  {
    "Question": "Что относят к структурированным данным ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Что относится к структурированным данным ?",
    "Answer": "2",
    "Info": "хранилища данных"
  },
  {
    "Question": "Можно ли методы многомерного поиска использовать при одномерном поиске ?",
    "Answer": "2",
    "Info": "нельзя"
  },
  {
    "Question": "Какие группы методов используются при многомерном поиске ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Метрические методы поиска используются...",
    "Answer": "4",
    "Info": "во всех перечисленных случаях"
  },
  {
    "Question": "Пространственно-временные методы поиска используются...",
    "Answer": "4",
    "Info": "во всех перечисленных случаях"
  },
  {
    "Question": "Что мы ищем в одномерном поиске ?",
    "Answer": "1",
    "Info": "ключ"
  },
  {
    "Question": "Внутренний ключ - это...",
    "Answer": "3",
    "Info": "поле записи"
  },
  {
    "Question": "Внешний ключ - это...",
    "Answer": "2",
    "Info": "элемент таблицы ключей"
  },
  {
    "Question": "Первичный ключ - это...",
    "Answer": "4",
    "Info": "поле уникальных элементов таблицы"
  },
  {
    "Question": "Вторичный ключ - это...",
    "Answer": "1",
    "Info": "поле с неуникальными записями"
  },
  {
    "Question": "Почему различается поиск по первычным и вторичным ключами ?",
    "Answer": "4",
    "Info": "справедливо всё перечисленное"
  },
  {
    "Question": "Какие методы называются методами внутреннего поиска",
    "Answer": "1",
    "Info": "структуры хранения данных находятся в оперативной памяти"
  },
  {
    "Question": "Какие методы называются методами внешнего поиска ?",
    "Answer": "1",
    "Info": "которые работают с данными во внешней памяти"
  },
  {
    "Question": "Применимы ли алгоритмы внутреннего поиска ко внешнему поиску ?",
    "Answer": "2",
    "Info": "не применимы"
  },
  {
    "Question": "Какие методы не относятся к последовательному поиску ?",
    "Answer": "4",
    "Info": "поиск с помощью TRIE TREES"
  },
  {
    "Question": "Какова сложность алгоритмов последовательного поиска ?",
    "Answer": "3",
    "Info": "O (n)"
  },
  {
    "Question": "Какова сложность алгоритмов индексно-последовательного поиска ?",
    "Answer": "2",
    "Info": "O (n/2)"
  },
  {
    "Question": "Какую сложность имеют алгоритмы бинарного поиска ?",
    "Answer": "2",
    "Info": "O (log n)"
  },
  {
    "Question": "Какой из методов последовательного поиска наиболее эффективен ?",
    "Answer": "3",
    "Info": "SPLAY TREES (расширяющиеся деревья)"
  },
  {
    "Question": "Если данные меняются редко или не меняются, то какой метод последовательного поиска передпочтителен ?",
    "Answer": "1",
    "Info": "последовательный поиск в массиве"
  },
  {
    "Question": "Если последовательность не отсортирована, то какие методы поиска можно применять ?",
    "Answer": "1",
    "Info": "последовательный поиск"
  },
  {
    "Question": "Какие преимущества у расширяемых деревье при последовательном поиске ?",
    "Answer": "4",
    "Info": "всё перечисленное справедливо"
  },
  {
    "Question": "Какие улучшения можно сделать для последовательного поиска ?",
    "Answer": "4",
    "Info": "всё вышеперечисленное"
  },
  {
    "Question": "В чём особенность индексно-последовательного поиска ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Что индексирует индекс 2го уровня ?",
    "Answer": "1",
    "Info": "индекс 1го уровня"
  },
  {
    "Question": "Можно ли применять бинарный поиск в индексе 1го и 2го уровня ?",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "В чём недостаток индексно-последовательного поиска ?",
    "Answer": "1",
    "Info": "требуется дополнительная память"
  },
  {
    "Question": "Когда бинарный поиск наиболее эффективен ?",
    "Answer": "1",
    "Info": "при поиске в массиве"
  },
  {
    "Question": "В чем недостаток рекурсивной реализации бинарного поиска ?",
    "Answer": "2",
    "Info": "требуется дополнительная память"
  },
  {
    "Question": "В чём достоинство бинарного поиска в связанной структуре?",
    "Answer": "4",
    "Info": "всё вышеперечисленное"
  },
  {
    "Question": "С помощью каких структур можно реализовать бинарный поиск ?",
    "Answer": "1",
    "Info": "массив"
  },
  {
    "Question": "Можно ли комбинировать хеширование с другими методами поиска ?",
    "Answer": "2",
    "Info": "можно но не с любыми"
  },
  {
    "Question": "Где применяется хеширование ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Какова сложность алгоритмов хеширования ?",
    "Answer": "1",
    "Info": "O(i)"
  },
  {
    "Question": "Где осуществляется поиск хеширования ?",
    "Answer": "3",
    "Info": "в отсортированном по специальным правилам"
  },
  {
    "Question": "Когда хеширование даёт существенные преимущества ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Что из себя представляет хеш-таблица ?",
    "Answer": "3",
    "Info": "вектор с необычной индексацией"
  },
  {
    "Question": "Чему, как правило, равен размер хеш-таблицы ?",
    "Answer": "4",
    "Info": "простому числу, примерно равному количеству элементов умноженному на k=1,3"
  },
  {
    "Question": "Если в пункте проката число клиентов около 500, в качестве ключа используется шестизначный номер телефона, какой размер хэш таблицы целесообразно выбрать ?",
    "Answer": "4",
    "Info": "647"
  },
  {
    "Question": "В каком случае целесообразно применять идеальную хеш-функцию ?",
    "Answer": "4",
    "Info": "во всех перечисленных случаях"
  },
  {
    "Question": "Что такое идеальная хеш-функция ?",
    "Answer": "3",
    "Info": "нет коллизий и индекс не больше количества элементов"
  },
  {
    "Question": "Что такое совершенная хеш-функция ?",
    "Answer": "3",
    "Info": "нет коллизий и индекс не больше размера хэш-таблицы"
  },
  {
    "Question": "Что представляет собой универсальная хеш-функция ?",
    "Answer": "2",
    "Info": "функция преобразующая ключ в адрес"
  },
  {
    "Question": "Какие требования предъявляются к универсальной хеш-функции ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Какие требования предъявляются к идеальной хеш-функции ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Какие требования предъявляются к совершенной хеш-функции ?",
    "Answer": "2",
    "Info": "чтобы хэш-функция не давала коллизий"
  },
  {
    "Question": "Чем равен размер хеш-таблицы при идеальном хешировании",
    "Answer": "1",
    "Info": "числу элентов (ключей)"
  },
  {
    "Question": "В чем основная идея хеширования ?",
    "Answer": "3.4",
    "Info": "адрес элемента (индекс) является функцией от ключа,всё перечисленное верно"
  },
  {
    "Question": "Когда наиболее целесообразно применение хеширования ?",
    "Answer": "3",
    "Info": "для сохранения широкого диапазона ключей в малом объеме памяти и осуществления быстрого доступа"
  },
  {
    "Question": "Почему размер хеш-таблицы больше количества ключей ?",
    "Answer": "4",
    "Info": "во всех перечисленных случаях"
  },
  {
    "Question": "Коллизией называется ситуация, когда в результате хеширования....",
    "Answer": "2",
    "Info": "два разных ключа имеют одинаковый индекс"
  },
  {
    "Question": "Какие недостатки есть у методов хэширования ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Чему равен коэффициент заполненности хэш-таблицы ?",
    "Answer": "1",
    "Info": "отношению количества ключей к размеру хэш-таблицы"
  },
  {
    "Question": "Когда хэширование не эфективно ?",
    "Answer": "4",
    "Info": "во всех пречисленных случаях"
  },
  {
    "Question": "Какие классы хэш-функций эфективны для малых неизменных объемов данных ?",
    "Answer": "1",
    "Info": "идеальные"
  },
  {
    "Question": "Какие из перечисленных алгоритмов позволяют найти идеальные хэш-функции ?",
    "Answer": "4",
    "Info": "любой из перечисленных"
  },
  {
    "Question": "Какие хэш-функции относятся к универсальным ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Какие хэш-функции относятся к универсальным ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Применимо ли хеширование методом деления для строковых ключей ?",
    "Answer": "3",
    "Info": "применимо, если строковые ключи преобразовать в числа"
  },
  {
    "Question": "Хеширование методом деления - это...",
    "Answer": "1",
    "Info": "вычисление хэш-адреса"
  },
  {
    "Question": "Хеширование Фибоначчи - это...",
    "Answer": "2",
    "Info": "частный случай метода умножения"
  },
  {
    "Question": "Что является наиболее важным для эффективности метода умножения ?",
    "Answer": "1",
    "Info": "константа C"
  },
  {
    "Question": "В каком случае метод умножения эффективнее метода деления ?",
    "Answer": "2",
    "Info": "когда удачно выбрана константа C"
  },
  {
    "Question": "Какие операции не выполняются при хешировании методом деления ?",
    "Answer": "4",
    "Info": "завершение хеширования в случае коллизии"
  },
  {
    "Question": "При хешировании каких ключей функция деления будет наиболее эффективной ?",
    "Answer": "3",
    "Info": "номер сотового оператора"
  },
  {
    "Question": "Имеется группа студентов из 25 человек. Какой размер хеш-таблицы нужно выбирать при хешировании методом деления ?",
    "Answer": "2",
    "Info": "31"
  },
  {
    "Question": "Как преобразуются текстовые ключи в целые числа ?",
    "Answer": "4",
    "Info": "любым из перечисленных способов"
  },
  {
    "Question": "Когда применяется хеширование методом середины квадрата ?",
    "Answer": "2",
    "Info": "когда надо уйти от скучивания при коллизиях"
  },
  {
    "Question": "Какой из методов хэширования более эффективен при обычных условиях ?",
    "Answer": "1",
    "Info": "метод деления"
  },
  {
    "Question": "Как оценить качество хэш-функции ?",
    "Answer": "2",
    "Info": "экспериментально по законам концентрации коллизий"
  },
  {
    "Question": "Когда используются схемы открытых адресаций ?",
    "Answer": "2",
    "Info": "для преодоления коллизий в статических хэш-таблицах"
  },
  {
    "Question": "Какая схема преодоления коллизий не относится к открытой адресации ?",
    "Answer": "4",
    "Info": "метод цепочек"
  },
  {
    "Question": "Какой размер хеш-таблицы выбирается при открытой адресации ?",
    "Answer": "4",
    "Info": "простому числу, чуть больше числа элементов умноженных на k=1,3"
  },
  {
    "Question": "Что представляет собой хеш-таблица при использовании метода цепочек ?",
    "Answer": "2",
    "Info": "массив списков"
  },
  {
    "Question": "Чему равен размер хэш-таблицы при использовании метода цепочек ?",
    "Answer": "1",
    "Info": "равен числу элементов"
  },
  {
    "Question": "Какой из методов преодоления коллизий работает быстрее ?",
    "Answer": "2",
    "Info": "методы цепочки"
  },
  {
    "Question": "При удалении из хэш-таблицы ячейка помечается как...",
    "Answer": "2",
    "Info": "удалённая"
  },
  {
    "Question": "Можно ли применять хеширование для многомерного поиска ?",
    "Answer": "3",
    "Info": "можно, только используя для этого специальные методы"
  },
  {
    "Question": "Чем принципиально отличается хеширование от других методов поиска",
    "Answer": "1",
    "Info": "производительностью"
  },
  {
    "Question": "Чему равен размер хеш-таблицы при совершенном хешировании ?",
    "Answer": "4",
    "Info": "простому числу, чуть больше количества элементов, умноженному на k=1,3"
  },
  {
    "Question": "В каком случае решение задачи методами исчерпывающео поиска будет возможным ?",
    "Answer": "3",
    "Info": "множество вариантов не более 10^8"
  },
  {
    "Question": "В каком случае целессобразно использовать методы исчерпывающего поиска ?",
    "Answer": "4",
    "Info": "там, где есть альтерльнатива перебору"
  },
  {
    "Question": "Чем отличаются методы исчерпывающего поиска от простого перебора ?",
    "Answer": "4",
    "Info": "всем перечисленным"
  },
  {
    "Question": "Какую задачу как правило решает метод поиска с возвращением ?",
    "Answer": "1",
    "Info": "поиск любого приемлимого варианта"
  },
  {
    "Question": "Какую структура данных использует метод поиска с возвращением ?",
    "Answer": "2",
    "Info": "стек"
  },
  {
    "Question": "На каком методе базируется поиск с возвращением ?",
    "Answer": "2",
    "Info": "на поиске в глубину"
  },
  {
    "Question": "Какой из методов исчерпывающего поиска проще в реализации ?",
    "Answer": "1",
    "Info": "метод проб и ошибок"
  },
  {
    "Question": "Какой из методов исчерпывающего поиска наиболее сложен в реализации ?",
    "Answer": "3",
    "Info": "динамическое программирование"
  },
  {
    "Question": "Когда рекомендуется применение динамического программирования ?",
    "Answer": "3",
    "Info": "задача разбивается на части, которые имеют оптимальное решение"
  },
  {
    "Question": "На какой из методов похож метод решета ?",
    "Answer": "1",
    "Info": "поиск в возвратом"
  },
  {
    "Question": "Какие задачи рекомендуется решать методом поиска с возвратом ?",
    "Answer": "2",
    "Info": "задача о расстановке n-ферзей"
  },
  {
    "Question": "Какие задачи рекомендуется решать методом поиска с возвратом ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Сложность поиска с возвращением ?",
    "Answer": "4",
    "Info": "справедливо всё вышеперечисленное"
  },
  {
    "Question": "Какие задачи рекомендуется решать методом поиска с возвратом ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Какие задачи приходится решать методом ветвей и границ ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Какие задачи не рекомендуется решать методом методом ветвей и границ ?",
    "Answer": "4",
    "Info": "всё перечисленное"
  },
  {
    "Question": "Какие признаки характертерны для задач динамического программирования ?",
    "Answer": "3",
    "Info": "всё перечисленные"
  },
  {
    "Question": "Когда применим метод динамического программирования ?",
    "Answer": "2",
    "Info": "перемножение нескольких матриц"
  },
  {
    "Question": "Когда применим метод динамического программирования ?",
    "Answer": "2",
    "Info": "построение наибольшей общей подпоследовательности"
  },
  {
    "Question": "Когда применим метод динамического программирования ?",
    "Answer": "3",
    "Info": "оптимальная триангуляция многоугольника"
  },
  {
    "Question": "Какие из перечисленных задач можно решить с помощью динамического программирования?",
    "Answer": "4",
    "Info": "все перечисленные задачи"
  },
  {
    "Question": "Является ли перебор с возвратом ... ?",
    "Answer": "2",
    "Info": "... схемой решения задачи"
  },
  {
    "Question": "Каким методом исчерпывающего поиска можно решать задачу укладки рюкзака ?",
    "Answer": "4",
    "Info": "любым из перечисленных методов"
  },
  {
    "Question": "Какие графы называются нагруженными ?",
    "Answer": "3",
    "Info": "если рёбра графа имеют нагрузочную информацию"
  },
  {
    "Question": "Какие графы называются полными ?",
    "Answer": "2",
    "Info": "каждый узел связан со всеми остальными узлами"
  },
  {
    "Question": "Какой из способов представления графов самый неэффективный ?",
    "Answer": "1",
    "Info": "матрица инциденций"
  },
  {
    "Question": "Какая структура наиболее удобна для представления полного графа ?",
    "Answer": "2",
    "Info": "матрица смежности"
  },
  {
    "Question": "Чему равны элементы матрицы инцендентности для ориентированных графов?",
    "Answer": "4",
    "Info": "любой вариант из перечисленных"
  },
  {
    "Question": "Чему равны элементы матрицы инденций для неориентированного графа ?",
    "Answer": "2",
    "Info": "наличию связи между узлом и ребром"
  },
  {
    "Question": "Какой из способов представления полного графа требует минимальной памяти ?",
    "Answer": "2",
    "Info": "матрица смежности"
  },
  {
    "Question": "Какой из способов представления полного графа требует максимальной памяти ?",
    "Answer": "1",
    "Info": "матрица инциденций"
  },
  {
    "Question": "Почему для представления графа неудобна матрица инцинденций ?",
    "Answer": "4",
    "Info": "все перечисленные причины"
  },
  {
    "Question": "Можно ли применять для нагруженного графа матрицу инциденций ?",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Матрица инциденций имеет вид...",
    "Answer": "1",
    "Info": "...прямоугольника"
  },
  {
    "Question": "Матрица смежности имеет вид...",
    "Answer": "2",
    "Info": "...квадрата"
  },
  {
    "Question": "В каком случае на диагонале матрицы смежности может появится единица ?",
    "Answer": "2",
    "Info": "если в узле есть петля"
  },
  {
    "Question": "Чему равны элементы матрицы смежности для неориентированного графа ?",
    "Answer": "1",
    "Info": "0 или 1"
  },
  {
    "Question": "Чему равны элементы матрицы смежности для ориентированного графа ?",
    "Answer": "2",
    "Info": "0 или 1 или -1"
  },
  {
    "Question": "Чему равны элементы матрицы смежности для нагруженного графа ?",
    "Answer": "3",
    "Info": "целому положительному числу"
  },
  {
    "Question": "Чему равны элементы матрицы смежности для полного ненагруженного графа ?",
    "Answer": "2",
    "Info": "1"
  },
  {
    "Question": "Чему равны элементы матрицы смежности для полного нагруженного графа ?",
    "Answer": "4",
    "Info": "W, где (W- величина нагруженного ребра) "
  },
  {
    "Question": "Чему равен размер матрицы инциденций ?",
    "Answer": "2",
    "Info": "n * m, где n- количество узлов, m - количество рёбер"
  },
  {
    "Question": "Чему равен размер матрицы смежности ?",
    "Answer": "1",
    "Info": "n * n, где n- количество узлов"
  },
  {
    "Question": "Чему равно количество ненулевых элементов в матрице смежности для ориентированного графа ?",
    "Answer": "2",
    "Info": "количеству рёбер (m)"
  },
  {
    "Question": "Чему равно количество ненулевых элементов в матрице смежности для неориентированного графа ?",
    "Answer": "2",
    "Info": "количеству рёбер (m)"
  },
  {
    "Question": "Если узлы графа упорядочены по разному, будет ли одинаковы матрицы смежности ?",
    "Answer": "2",
    "Info": "нет"
  },
  {
    "Question": "Основное преимущество матрицы смежности ?",
    "Answer": "3",
    "Info": "за один шаг определяется связь между двуямя узлами"
  },
  {
    "Question": "Достоинства матрицы смежности ?",
    "Answer": "2",
    "Info": "легко добавить ребро"
  },
  {
    "Question": "Достоинство матрицы смежности ?",
    "Answer": "4",
    "Info": "легко всё перечисленнное"
  },
  {
    "Question": "Для простого неориентированного графа матрица смежности:",
    "Answer": "1",
    "Info": "симметрична"
  },
  {
    "Question": "Для ориентированноо графа матрица смежности:",
    "Answer": "2",
    "Info": "несимметрична"
  },
  {
    "Question": "Как можно сократить объем памяти для хранения матрицы смежности неориентированноо графа ?",
    "Answer": "4",
    "Info": "любым из перечисленных способов"
  },
  {
    "Question": "Можно ли мультиграф представить с помощью матрицы смежности ?",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Можно ли взвешанные (нагруженные) графы представить с помощью матрицы смежности ?",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Когда удобно представить граф списком рёбер ?",
    "Answer": "2",
    "Info": "граф разреженный"
  },
  {
    "Question": "Список рёбер - это...",
    "Answer": "4",
    "Info": "справедливо всё вышеперечисленное"
  },
  {
    "Question": "Основное достоинство представления графа с помощью списка рёбер?",
    "Answer": "2",
    "Info": "экономия памяти"
  },
  {
    "Question": "Какой объём памяти необходим для представления графа с помощью списка рёбер ?",
    "Answer": "4",
    "Info": "2 * m"
  },
  {
    "Question": "Структура смежности - это...",
    "Answer": "2",
    "Info": "... список связанных с каждой вершиной соседних узлов"
  },
  {
    "Question": "Какой размер структуры смежности для ориентированного графа ?",
    "Answer": "2",
    "Info": "n + m"
  },
  {
    "Question": "Какой размер структуры смежности для неориентированного графа ?",
    "Answer": "3",
    "Info": "n + 2m"
  },
  {
    "Question": "Когда удобно применение структуры смежности ?",
    "Answer": "2",
    "Info": "когда необходимо частое редактирование"
  },
  {
    "Question": "Когда можно реализовать структуру смежности ?",
    "Answer": "4",
    "Info": "с помощью любой из перечисленных структур"
  },
  {
    "Question": "Какая структура предпочтительней для реализации структуры смежности, если необходимо редактировать рёбра ?",
    "Answer": "2",
    "Info": "массив списков"
  },
  {
    "Question": "Какая структура предпочтительней для реализации структуры смежности, если требуется часто редактировать узлы ?",
    "Answer": "1",
    "Info": "список списков"
  },
  {
    "Question": "Вектор смежности - это...",
    "Answer": "3",
    "Info": "всё перечисленное правильно"
  },
  {
    "Question": "Вектор смежности рекомендуется для представления...",
    "Answer": "1",
    "Info": "редкоизменяемых графов"
  },
  {
    "Question": "Можно ли перейти от одного изображения графа к другому ?",
    "Answer": "1",
    "Info": "можно"
  },
  {
    "Question": "Граф может быть не связным ?",
    "Answer": "1",
    "Info": "может"
  },
  {
    "Question": "Остовное дерево - это часть графа ?",
    "Answer": "1",
    "Info": "да"
  },
  {
    "Question": "Сколько остовных деревьев содержит полный связный граф с n вершинами ?",
    "Answer": "3",
    "Info": "n ^(n-2)"
  },
  {
    "Question": "Сколько рёбер содержит остовное дерево с n узлами ?",
    "Answer": "2",
    "Info": "n - 1"
  },
  {
    "Question": "Любой ли граф содержит остовное дерево ?",
    "Answer": "2",
    "Info": "только связный"
  },
  {
    "Question": "Остовное дерево - это...",
    "Answer": "4",
    "Info": "правильно всё перечисленное выше"
  },
  {
    "Question": "Сколько остовных деревьев содержит предлагаемый граф ? ",
    "Answer": "3",
    "Info": "125"
  },
  {
    "Question": "В чём цель поиска остовного дерева ?",
    "Answer": "2",
    "Info": "для поиска пути от одного узла к другому"
  },
  {
    "Question": "Какой метод используется для поиска произвольного остовного дерева ?",
    "Answer": "1",
    "Info": "метод поиска в ширину"
  },
  {
    "Question": "Какой метод используется для поиска произвольного остовного дерева ?",
    "Answer": "1",
    "Info": "метод поиска в глубину"
  },
  {
    "Question": "Как найти остовное дерево минимального веса ?",
    "Answer": "3",
    "Info": "алгоритм Прима"
  },
  {
    "Question": "Как найти остовное дерево минимального веса ?",
    "Answer": "1",
    "Info": "алгоритм Краскала"
  },
  {
    "Question": "Какие проверки обязательны при поиске остовного дерева ?",
    "Answer": "4",
    "Info": "всё перечисленное верно"
  },
  {
    "Question": "В чём суть грубого алгоритма поиска остовного дерева ?",
    "Answer": "2",
    "Info": "рекурсивно выбирается ребро минимального веса и осуществляются необходимые проверки"
  },
  {
    "Question": "Что мы находим методом поиска в глубину ?",
    "Answer": "3",
    "Info": "остовное дерево заданного графа"
  },
  {
    "Question": "Что мы находим методом поиска в ширину ?",
    "Answer": "3",
    "Info": "остовное дерево заданного графа"
  },
  {
    "Question": "Какова сложность алгоритма поиска в глубину ?",
    "Answer": "3",
    "Info": "O (n+m), где n- количество узлов, m- количество рёбер"
  },
  {
    "Question": "Метод поиска в глубину применим для...",
    "Answer": "3",
    "Info": "...в обоих случаях"
  },
  {
    "Question": "Для завершения поиска в глубину необходимо...",
    "Answer": "1",
    "Info": "остановку на определённой глубине"
  },
  {
    "Question": "Можно ли применять поиск в глубину для больших графов ?",
    "Answer": "3",
    "Info": "можно, но надо его усовершенствовать"
  },
  {
    "Question": "Как представить граф при поиске остовного дерева методом поиска в ширину ?",
    "Answer": "3",
    "Info": "структура смежности"
  },
  {
    "Question": "Какова сложность алгоритма поиска в ширину ?",
    "Answer": "3",
    "Info": "O (n+m), где n- количество узлов, m- количество рёбер"
  },
  {
    "Question": "Какая структура данных удобна при поиске в глубину ?",
    "Answer": "1",
    "Info": "стек"
  },
  {
    "Question": "Какая структура данных удобна при поиске в ширину ?",
    "Answer": "2",
    "Info": "очередь"
  },
  {
    "Question": "Почему стек удобен при поиске в глубину ?",
    "Answer": "4",
    "Info": "справедливо всё перечисленное"
  },
  {
    "Question": "Какой из методов лучше приспособлен для поиска кратчайшего пути ?",
    "Answer": "2",
    "Info": "поиск в ширину"
  },
  {
    "Question": "Какая сложность прямого поиска остовного дерева минимальной стоимости ?",
    "Answer": "2",
    "Info": "O (n^n), где n- количество узлов в графе"
  },
  {
    "Question": "Какая сложность алгоритма Краскала ?",
    "Answer": "3",
    "Info": "O (m log m), где m- количество рёбер в графе"
  },
  {
    "Question": "Какая сложность алгоритма Прима ?",
    "Answer": "3",
    "Info": "O (m lg n), где m- количество рёбер в графе"
  },
  {
    "Question": "Когда используется структура типа очередь ?"
  },
  {
    "Question": "Какие алгоритмы можно использовать для поиска остовных деревьев ?"
  }
]
